::Chef::Recipe.send(:include, Opscode::OpenSSL::Password)

node.set_unless['apache2']['odin_auth']['secret'] = secure_password

include_recipe "apache2_odin_auth"
include_recipe "apache2::mod_expires"
include_recipe "git"

directory "/srv/App-OdinAuthorizer/shared" do
  recursive true
end

## Production config file
config = node['apache2']['odin_auth']['server_config'].to_hash.dup
config['odin-auth'] = (config['odin-auth'] || {}).merge(
  'cookie' => node['apache2']['odin_auth']['cookie_name'],
  'secret' => node['apache2']['odin_auth']['secret'],
  'domain' => '.' + node['apache2']['odin_auth']['server_domain'],
  'secure' => !!node['apache2']['odin_auth']['server_ssl_key_path'] )

# Perl's old YAML module, used by Dancer, doesn't understand YAML
# generated by Ruby. We're going to read it with better YAML::XS and
# dump it with the old YAML.

cpan_module 'YAML::XS'
cpan_module 'YAML'

execute "rewrite production.yml" do
  command "perl -MYAML -MYAML::XS -e 'print YAML::Dump(YAML::XS::LoadFile($ARGV[0]))' production.ruby-flavoured-yml > production.yml"
  cwd "/srv/App-OdinAuthorizer/shared/"
  action :nothing
  notifies :restart, 'service[apache2]'
end

file "/srv/App-OdinAuthorizer/shared/production.ruby-flavoured-yml" do
  content config.to_yaml
  notifies :run, "execute[rewrite production.yml]"
end

## Log directory
directory "/srv/App-OdinAuthorizer/shared/logs" do
  owner 'www-data'
  group 'root'
  mode '0750'
end

deploy_branch "/srv/App-OdinAuthorizer" do
  repo "git://github.com/ginzamarkets/App-OdinAuthorizer.git"
  branch node['apache2']['odin_auth']['server_branch']
  shallow_clone true
  action ENV['FORCE_DEPLOY'] ? :force_deploy : :deploy
  symlink_before_migrate('production.yml' => 'environments/production.yml')
  symlinks('logs'=> 'logs')
  restart_command "invoke-rc.d apache2 restart"
  before_symlink do
    execute "cpanm --installdeps #{release_path}"
  end
end

web_app 'odin_authorizer'
